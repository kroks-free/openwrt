From 978305420fa2f817caf9d7f1ebffcca4ff509761 Mon Sep 17 00:00:00 2001
From: Kroks <dev@kroks.ru>
Date: Mon, 17 Oct 2022 17:42:57 +0300
Subject: [PATCH] kroks modems support

---
 drivers/net/usb/cdc_ether.c  | 43 ++++++++++++++++++++++++++++++++++++
 drivers/net/usb/cdc_ncm.c    | 27 ++++++++++++++++++++++
 drivers/net/usb/qmi_wwan.c   |  3 +++
 drivers/net/usb/rndis_host.c | 35 +++++++++++++++++++++++++++++
 drivers/usb/serial/option.c  | 19 ++++++++++++++++
 5 files changed, 127 insertions(+)

diff --git a/drivers/net/usb/cdc_ether.c b/drivers/net/usb/cdc_ether.c
index 43ddbe61dc58..9212f377d2b5 100644
--- a/drivers/net/usb/cdc_ether.c
+++ b/drivers/net/usb/cdc_ether.c
@@ -538,6 +538,16 @@ static const struct driver_info wwan_info = {
 	.manage_power =	usbnet_manage_power,
 };
 
+static const struct driver_info asr_cdc_info = {
+	.description =	"Asr CDC Ethernet Device",
+	.flags =	FLAG_WWAN | FLAG_POINTTOPOINT | FLAG_NOARP,
+	.bind =		usbnet_cdc_bind,
+	.unbind =	usbnet_cdc_unbind,
+	.status =	usbnet_cdc_status,
+	.set_rx_mode =	usbnet_cdc_update_filter,
+	.manage_power =	usbnet_manage_power,
+};
+
 /*-------------------------------------------------------------------------*/
 
 #define HUAWEI_VENDOR_ID	0x12D1
@@ -555,6 +565,9 @@ static const struct driver_info wwan_info = {
 #define TPLINK_VENDOR_ID	0x2357
 #define AQUANTIA_VENDOR_ID	0x2eca
 #define ASIX_VENDOR_ID		0x0b95
+#define QUECTEL_VENDOR_ID	0x2c7c
+#define ALINK_VENDOR_ID		0x1e0e
+#define MEIG_VENDOR_ID		0x2dee
 
 static const struct usb_device_id	products[] = {
 /* BLACKLIST !!
@@ -980,6 +993,36 @@ static const struct usb_device_id	products[] = {
 				      USB_CDC_SUBCLASS_ETHERNET,
 				      USB_CDC_PROTO_NONE),
 	.driver_info = (unsigned long)&wwan_info,
+}, {
+	/* Quectel EG060V modem */
+	USB_DEVICE_AND_INTERFACE_INFO(QUECTEL_VENDOR_ID, 0x6004, USB_CLASS_COMM,
+				      USB_CDC_SUBCLASS_ETHERNET,
+				      USB_CDC_PROTO_NONE),
+	.driver_info = (unsigned long)&asr_cdc_info,
+}, {
+	/* Quectel EC200A modem */
+	USB_DEVICE_AND_INTERFACE_INFO(QUECTEL_VENDOR_ID, 0x6005, USB_CLASS_COMM,
+				      USB_CDC_SUBCLASS_ETHERNET,
+				      USB_CDC_PROTO_NONE),
+	.driver_info = (unsigned long)&asr_cdc_info,
+}, {
+	/* Quectel EC200T modem */
+	USB_DEVICE_AND_INTERFACE_INFO(QUECTEL_VENDOR_ID, 0x6026, USB_CLASS_COMM,
+				      USB_CDC_SUBCLASS_ETHERNET,
+				      USB_CDC_PROTO_NONE),
+	.driver_info = (unsigned long)&asr_cdc_info,
+}, {
+	/* Simcom A7906E modem */
+	USB_DEVICE_AND_INTERFACE_INFO(ALINK_VENDOR_ID, 0x9011, USB_CLASS_COMM,
+				      USB_CDC_SUBCLASS_ETHERNET,
+				      USB_CDC_PROTO_NONE),
+	.driver_info = (unsigned long)&asr_cdc_info,
+}, {
+	/* Meig SLM770A */
+	USB_DEVICE_AND_INTERFACE_INFO(MEIG_VENDOR_ID, 0x4d58, USB_CLASS_COMM,
+				      USB_CDC_SUBCLASS_ETHERNET,
+				      USB_CDC_PROTO_NONE),
+	.driver_info = (unsigned long)&asr_cdc_info,
 }, {
 	USB_INTERFACE_INFO(USB_CLASS_COMM, USB_CDC_SUBCLASS_ETHERNET,
 			USB_CDC_PROTO_NONE),
diff --git a/drivers/net/usb/cdc_ncm.c b/drivers/net/usb/cdc_ncm.c
index ab91fa5b0194..003a1f9badac 100644
--- a/drivers/net/usb/cdc_ncm.c
+++ b/drivers/net/usb/cdc_ncm.c
@@ -1940,6 +1940,19 @@ static const struct driver_info wwan_noarp_info = {
 	.set_rx_mode = usbnet_cdc_update_filter,
 };
 
+static const struct driver_info asr_ncm_info = {
+	.description = "Asr CDC NCM",
+	.flags = FLAG_POINTTOPOINT | FLAG_NO_SETINT | FLAG_MULTI_PACKET
+			| FLAG_LINK_INTR | FLAG_WWAN | FLAG_NOARP,
+	.bind = cdc_ncm_bind,
+	.unbind = cdc_ncm_unbind,
+	.manage_power = usbnet_manage_power,
+	.status = cdc_ncm_status,
+	.rx_fixup = cdc_ncm_rx_fixup,
+	.tx_fixup = cdc_ncm_tx_fixup,
+	.set_rx_mode = usbnet_cdc_update_filter,
+};
+
 static const struct usb_device_id cdc_devs[] = {
 	/* Ericsson MBM devices like F5521gw */
 	{ .match_flags = USB_DEVICE_ID_MATCH_INT_INFO
@@ -2018,6 +2031,20 @@ static const struct usb_device_id cdc_devs[] = {
 	  .driver_info = (unsigned long)&wwan_info,
 	},
 
+	/* Quectel EG060V */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2c7c, 0x6004,
+		USB_CLASS_COMM,
+		USB_CDC_SUBCLASS_NCM, USB_CDC_PROTO_NONE),
+	  .driver_info = (unsigned long)&asr_ncm_info,
+	},
+
+	/* Simcom A7906E */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x1e0e, 0x9011,
+		USB_CLASS_COMM,
+		USB_CDC_SUBCLASS_NCM, USB_CDC_PROTO_NONE),
+	  .driver_info = (unsigned long)&asr_ncm_info,
+	},
+
 	/* Generic CDC-NCM devices */
 	{ USB_INTERFACE_INFO(USB_CLASS_COMM,
 		USB_CDC_SUBCLASS_NCM, USB_CDC_PROTO_NONE),
diff --git a/drivers/net/usb/qmi_wwan.c b/drivers/net/usb/qmi_wwan.c
index 1502069f3a4e..5cd51d8617ac 100644
--- a/drivers/net/usb/qmi_wwan.c
+++ b/drivers/net/usb/qmi_wwan.c
@@ -1021,11 +1021,14 @@ static const struct usb_device_id products[] = {
 	},
 	{QMI_MATCH_FF_FF_FF(0x2c7c, 0x0125)},	/* Quectel EC25, EC20 R2.0  Mini PCIe */
 	{QMI_MATCH_FF_FF_FF(0x2c7c, 0x0306)},	/* Quectel EP06/EG06/EM06 */
+	{QMI_MATCH_FF_FF_FF(0x2c7c, 0x030b)},	/* Quectel EG120K-EA */
 	{QMI_MATCH_FF_FF_FF(0x2c7c, 0x0512)},	/* Quectel EG12/EM12 */
 	{QMI_MATCH_FF_FF_FF(0x2c7c, 0x0620)},	/* Quectel EM160R-GL */
 	{QMI_MATCH_FF_FF_FF(0x2c7c, 0x0800)},	/* Quectel RM500Q-GL */
 	{QMI_MATCH_FF_FF_FF(0x2c7c, 0x0801)},	/* Quectel RM520N */
 
+	{QMI_QUIRK_SET_DTR(0x2dee, 0x4d22, 5)},	/* Meig SLM828 */
+
 	/* 3. Combined interface devices matching on interface number */
 	{QMI_FIXED_INTF(0x0408, 0xea42, 4)},	/* Yota / Megafon M100-1 */
 	{QMI_FIXED_INTF(0x05c6, 0x6001, 3)},	/* 4G LTE usb-modem U901 */
diff --git a/drivers/net/usb/rndis_host.c b/drivers/net/usb/rndis_host.c
index 1505fe3f87ed..71e4fdcca65c 100644
--- a/drivers/net/usb/rndis_host.c
+++ b/drivers/net/usb/rndis_host.c
@@ -600,6 +600,16 @@ static const struct driver_info	rndis_poll_status_info = {
 	.tx_fixup =	rndis_tx_fixup,
 };
 
+static const struct driver_info asr_rndis_info = {
+	.description =	"Asr RNDIS device",
+	.flags =	FLAG_WWAN | FLAG_POINTTOPOINT | FLAG_FRAMING_RN | FLAG_NO_SETINT | FLAG_NOARP,
+	.bind =		rndis_bind,
+	.unbind =	rndis_unbind,
+	.status =	rndis_status,
+	.rx_fixup =	rndis_rx_fixup,
+	.tx_fixup =	rndis_tx_fixup,
+};
+
 /*-------------------------------------------------------------------------*/
 
 static const struct usb_device_id	products [] = {
@@ -621,6 +631,31 @@ static const struct usb_device_id	products [] = {
 	/* "ActiveSync" is an undocumented variant of RNDIS, used in WM5 */
 	USB_INTERFACE_INFO(USB_CLASS_MISC, 1, 1),
 	.driver_info = (unsigned long) &rndis_poll_status_info,
+}, {
+	/* Quectel EG060V rndis device */
+	USB_DEVICE_AND_INTERFACE_INFO(0x2c7c, 0x6004,
+				      USB_CLASS_WIRELESS_CONTROLLER, 1, 3),
+	.driver_info = (unsigned long) &asr_rndis_info,
+}, {
+	/* Quectel EC200A rndis device */
+	USB_DEVICE_AND_INTERFACE_INFO(0x2c7c, 0x6005,
+				      USB_CLASS_WIRELESS_CONTROLLER, 1, 3),
+	.driver_info = (unsigned long) &asr_rndis_info,
+}, {
+	/* Quectel EC200T rndis device */
+	USB_DEVICE_AND_INTERFACE_INFO(0x2c7c, 0x6026,
+				      USB_CLASS_WIRELESS_CONTROLLER, 1, 3),
+	.driver_info = (unsigned long) &asr_rndis_info,
+}, {
+	/* Simcom A7906E rndis device */
+	USB_DEVICE_AND_INTERFACE_INFO(0x1e0e, 0x9011,
+				      USB_CLASS_WIRELESS_CONTROLLER, 1, 3),
+	.driver_info = (unsigned long) &asr_rndis_info,
+}, {
+	/* Meig SLM770A */
+	USB_DEVICE_AND_INTERFACE_INFO(0x2dee, 0x4d57,
+				      USB_CLASS_WIRELESS_CONTROLLER, 1, 3),
+	.driver_info = (unsigned long) &asr_rndis_info,
 }, {
 	/* RNDIS for tethering */
 	USB_INTERFACE_INFO(USB_CLASS_WIRELESS_CONTROLLER, 1, 3),
diff --git a/drivers/usb/serial/option.c b/drivers/usb/serial/option.c
index eea3dd18a044..8b031a4bb9b5 100644
--- a/drivers/usb/serial/option.c
+++ b/drivers/usb/serial/option.c
@@ -244,6 +244,12 @@ static void option_instat_callback(struct urb *urb);
 /* These Yuga products use Qualcomm's vendor ID */
 #define YUGA_PRODUCT_CLM920_NC5			0x9625
 
+#define MEIG_VENDOR_ID				0x2dee
+/* These Meig products use Meig's vendor ID */
+#define MEIG_PRODUCT_SLM828			0x4d22
+#define MEIG_PRODUCT_SLM770A_RNDIS		0x4d57
+#define MEIG_PRODUCT_SLM770A_ECM		0x4d58
+
 #define QUECTEL_VENDOR_ID			0x2c7c
 /* These Quectel products use Quectel's vendor ID */
 #define QUECTEL_PRODUCT_EC21			0x0121
@@ -258,6 +264,8 @@ static void option_instat_callback(struct urb *urb);
 #define QUECTEL_PRODUCT_RM500Q			0x0800
 #define QUECTEL_PRODUCT_RM520N			0x0801
 #define QUECTEL_PRODUCT_EC200S_CN		0x6002
+#define QUECTEL_PRODUCT_EG060V			0x6004
+#define QUECTEL_PRODUCT_EC200A			0x6005
 #define QUECTEL_PRODUCT_EC200T			0x6026
 #define QUECTEL_PRODUCT_RM500K			0x7001
 
@@ -355,6 +363,7 @@ static void option_instat_callback(struct urb *urb);
 
 #define ALINK_VENDOR_ID				0x1e0e
 #define SIMCOM_PRODUCT_SIM7100E			0x9001 /* Yes, ALINK_VENDOR_ID */
+#define SIMCOM_PRODUCT_A7906E			0x9011
 #define ALINK_PRODUCT_PH300			0x9100
 #define ALINK_PRODUCT_3GU			0x9200
 
@@ -1166,9 +1175,17 @@ static const struct usb_device_id option_ids[] = {
 	{ USB_DEVICE_AND_INTERFACE_INFO(QUECTEL_VENDOR_ID, QUECTEL_PRODUCT_RM520N, 0xff, 0, 0x40) },
 	{ USB_DEVICE_AND_INTERFACE_INFO(QUECTEL_VENDOR_ID, QUECTEL_PRODUCT_RM520N, 0xff, 0, 0) },
 	{ USB_DEVICE_AND_INTERFACE_INFO(QUECTEL_VENDOR_ID, QUECTEL_PRODUCT_EC200S_CN, 0xff, 0, 0) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(QUECTEL_VENDOR_ID, QUECTEL_PRODUCT_EG060V, 0x0a, 0, 0xff) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(QUECTEL_VENDOR_ID, QUECTEL_PRODUCT_EG060V, 0xff, 0, 0) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(QUECTEL_VENDOR_ID, QUECTEL_PRODUCT_EC200A, 0xff, 0, 0) },
 	{ USB_DEVICE_AND_INTERFACE_INFO(QUECTEL_VENDOR_ID, QUECTEL_PRODUCT_EC200T, 0xff, 0, 0) },
 	{ USB_DEVICE_AND_INTERFACE_INFO(QUECTEL_VENDOR_ID, QUECTEL_PRODUCT_RM500K, 0xff, 0x00, 0x00) },
 
+	{ USB_DEVICE(MEIG_VENDOR_ID, MEIG_PRODUCT_SLM828),
+	  .driver_info = RSVD(4) | RSVD(5) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(MEIG_VENDOR_ID, MEIG_PRODUCT_SLM770A_RNDIS, 0xff, 0, 0) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(MEIG_VENDOR_ID, MEIG_PRODUCT_SLM770A_ECM, 0xff, 0, 0) },
+
 	{ USB_DEVICE(CMOTECH_VENDOR_ID, CMOTECH_PRODUCT_6001) },
 	{ USB_DEVICE(CMOTECH_VENDOR_ID, CMOTECH_PRODUCT_CMU_300) },
 	{ USB_DEVICE(CMOTECH_VENDOR_ID, CMOTECH_PRODUCT_6003),
@@ -1923,6 +1940,8 @@ static const struct usb_device_id option_ids[] = {
 	{ USB_DEVICE_AND_INTERFACE_INFO(ALINK_VENDOR_ID, ALINK_PRODUCT_3GU, 0xff, 0xff, 0xff) },
 	{ USB_DEVICE(ALINK_VENDOR_ID, SIMCOM_PRODUCT_SIM7100E),
 	  .driver_info = RSVD(5) | RSVD(6) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(ALINK_VENDOR_ID, SIMCOM_PRODUCT_A7906E, 0x0a, 0, 0xff) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(ALINK_VENDOR_ID, SIMCOM_PRODUCT_A7906E, 0xff, 0, 0) },
 	{ USB_DEVICE_INTERFACE_CLASS(0x1e0e, 0x9003, 0xff) },	/* Simcom SIM7500/SIM7600 MBIM mode */
 	{ USB_DEVICE_INTERFACE_CLASS(0x1e0e, 0x9011, 0xff),	/* Simcom SIM7500/SIM7600 RNDIS mode */
 	  .driver_info = RSVD(7) },
-- 
2.38.0

